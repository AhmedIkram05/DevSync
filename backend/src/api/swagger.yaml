openapi: 3.0.0
info:
  title: DevSync API
  version: 1.0.0
  description: API Documentation for DevSync - A Development Team Collaboration Platform
servers:
  - url: http://localhost:8000/api/v1
    description: Local development server
  - url: https://devsync.com/api/v1
    description: Production server

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    CookieAuth:
      type: apiKey
      in: cookie
      name: access_token_cookie

  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        role:
          type: string
          enum: [admin, client]
        github_username:
          type: string
        created_at:
          type: string
          format: date-time
    
    Task:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        description:
          type: string
        status:
          type: string
          enum: [pending, in-progress, completed, review]
        progress:
          type: integer
          minimum: 0
          maximum: 100
        assigned_to:
          type: integer
        created_by:
          type: integer
        deadline:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        project_id:
          type: integer
    
    Project:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        status:
          type: string
          enum: [active, completed, archived]
        github_repo:
          type: string
        created_by:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Comment:
      type: object
      properties:
        id:
          type: integer
        task_id:
          type: integer
        user_id:
          type: integer
        content:
          type: string
        created_at:
          type: string
          format: date-time

    Notification:
      type: object
      properties:
        id:
          type: integer
        user_id:
          type: integer
        notification_type:
          type: string
        title:
          type: string
        message:
          type: string
        reference_id:
          type: string
        is_read:
          type: boolean
        created_at:
          type: string
          format: date-time
        read_at:
          type: string
          format: date-time
        task_id:
          type: integer

    GitHubRepository:
      type: object
      properties:
        id:
          type: integer
        repo_name:
          type: string
        repo_url:
          type: string
        github_id:
          type: integer

security:
  - BearerAuth: []
  - CookieAuth: []

paths:
  /auth/register:
    post:
      summary: Register a new user
      tags:
        - Authentication
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
                role:
                  type: string
                  enum: [admin, client]
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  user_id:
                    type: integer
  
  /auth/login:
    post:
      summary: Authenticate user and return JWT
      tags:
        - Authentication
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Authentication successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                  refresh_token:
                    type: string
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      email:
                        type: string
                      role:
                        type: string

  /auth/refresh:
    post:
      summary: Refresh access token using refresh token
      tags:
        - Authentication
      responses:
        '200':
          description: New access token generated
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string

  /auth/me:
    get:
      summary: Get current user profile
      tags:
        - Authentication
      responses:
        '200':
          description: Current user profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /tasks:
    get:
      summary: Fetch tasks (filtered by role and permissions)
      tags:
        - Tasks
      parameters:
        - name: status
          in: query
          schema:
            type: string
        - name: assigned_to
          in: query
          schema:
            type: integer
        - name: project_id
          in: query
          schema:
            type: integer
      responses:
        '200':
          description: List of tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
    
    post:
      summary: Create a new task (Admin only)
      tags:
        - Tasks
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                assigned_to:
                  type: integer
                deadline:
                  type: string
                  format: date-time
                project_id:
                  type: integer
      responses:
        '201':
          description: Task created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'

  /tasks/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
    
    get:
      summary: Get task by ID
      tags:
        - Tasks
      responses:
        '200':
          description: Task details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
    
    put:
      summary: Update an existing task
      tags:
        - Tasks
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                status:
                  type: string
                progress:
                  type: integer
                assigned_to:
                  type: integer
                deadline:
                  type: string
                  format: date-time
      responses:
        '200':
          description: Task updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
    
    delete:
      summary: Delete a task (Admin only)
      tags:
        - Tasks
      responses:
        '204':
          description: Task deleted successfully

  /tasks/{id}/comments:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
    
    post:
      summary: Add a comment to a task
      tags:
        - Comments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
      responses:
        '201':
          description: Comment added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
    
    get:
      summary: Fetch comments for a task
      tags:
        - Comments
      responses:
        '200':
          description: List of comments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comment'

  /projects:
    get:
      summary: Get all projects
      tags:
        - Projects
      responses:
        '200':
          description: List of projects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
    
    post:
      summary: Create a new project (Admin only)
      tags:
        - Projects
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                github_repo:
                  type: string
                team_members:
                  type: array
                  items:
                    type: integer
      responses:
        '201':
          description: Project created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'

  /projects/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
    
    get:
      summary: Get project by ID
      tags:
        - Projects
      responses:
        '200':
          description: Project details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
    
    put:
      summary: Update a project (Admin only)
      tags:
        - Projects
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                status:
                  type: string
                github_repo:
                  type: string
                team_members:
                  type: array
                  items:
                    type: integer
      responses:
        '200':
          description: Project updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
    
    delete:
      summary: Delete a project (Admin only)
      tags:
        - Projects
      responses:
        '204':
          description: Project deleted successfully

  /notifications:
    get:
      summary: Get user notifications
      tags:
        - Notifications
      parameters:
        - name: is_read
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: List of notifications
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Notification'

  /notifications/{id}/read:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
    
    put:
      summary: Mark a notification as read
      tags:
        - Notifications
      responses:
        '200':
          description: Notification marked as read
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'

  /github/connect:
    get:
      summary: Get GitHub OAuth URL for connecting accounts
      tags:
        - GitHub Integration
      responses:
        '200':
          description: GitHub OAuth URL
          content:
            application/json:
              schema:
                type: object
                properties:
                  auth_url:
                    type: string
  
  /github/callback:
    get:
      summary: Handle GitHub OAuth callback
      tags:
        - GitHub Integration
      parameters:
        - name: code
          in: query
          schema:
            type: string
      security: []
      responses:
        '302':
          description: Redirect to frontend with token

  /github/repos:
    get:
      summary: Fetch user's GitHub repositories
      tags:
        - GitHub Integration
      responses:
        '200':
          description: List of GitHub repositories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GitHubRepository'
  
  /github/repos/{repo_id}/link/{task_id}:
    parameters:
      - name: repo_id
        in: path
        required: true
        schema:
          type: integer
      - name: task_id
        in: path
        required: true
        schema:
          type: integer
    
    post:
      summary: Link a GitHub repository to a task
      tags:
        - GitHub Integration
      responses:
        '201':
          description: Repository linked to task successfully
