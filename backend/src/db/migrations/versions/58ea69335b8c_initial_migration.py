"""Initial migration

Revision ID: 58ea69335b8c
Revises: 
Create Date: 2025-03-03 18:29:32.439817

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '58ea69335b8c'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('project_tasks')
    op.drop_table('projects')
    with op.batch_alter_table('comments', schema=None) as batch_op:
        batch_op.drop_index('idx_comments_created_at')
        batch_op.drop_index('idx_comments_task_id')
        batch_op.drop_index('idx_comments_user_id')
        batch_op.drop_constraint('comments_task_id_fkey', type_='foreignkey')
        batch_op.drop_constraint('comments_user_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'tasks', ['task_id'], ['id'])
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'])

    with op.batch_alter_table('github_repositories', schema=None) as batch_op:
        batch_op.drop_constraint('github_repositories_repo_url_key', type_='unique')
        batch_op.drop_index('idx_github_repositories_name')

    with op.batch_alter_table('github_tokens', schema=None) as batch_op:
        batch_op.drop_index('idx_github_tokens_user_id')
        batch_op.drop_constraint('github_tokens_user_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'])

    with op.batch_alter_table('notifications', schema=None) as batch_op:
        batch_op.drop_index('idx_notifications_created_at')
        batch_op.drop_index('idx_notifications_is_read')
        batch_op.drop_index('idx_notifications_task_id')
        batch_op.drop_index('idx_notifications_user_id')
        batch_op.drop_constraint('notifications_task_id_fkey', type_='foreignkey')
        batch_op.drop_constraint('notifications_user_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'])
        batch_op.create_foreign_key(None, 'tasks', ['task_id'], ['id'])

    with op.batch_alter_table('task_github_links', schema=None) as batch_op:
        batch_op.drop_index('idx_task_github_links_repo_id')
        batch_op.drop_index('idx_task_github_links_task_id')
        batch_op.drop_constraint('task_github_links_repo_id_fkey', type_='foreignkey')
        batch_op.drop_constraint('task_github_links_task_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'github_repositories', ['repo_id'], ['id'])
        batch_op.create_foreign_key(None, 'tasks', ['task_id'], ['id'])

    with op.batch_alter_table('tasks', schema=None) as batch_op:
        batch_op.drop_index('idx_tasks_assigned_to')
        batch_op.drop_index('idx_tasks_created_at')
        batch_op.drop_index('idx_tasks_created_by')
        batch_op.drop_index('idx_tasks_deadline')
        batch_op.drop_index('idx_tasks_deadline_status')
        batch_op.drop_index('idx_tasks_progress')
        batch_op.drop_index('idx_tasks_status')
        batch_op.drop_index('idx_tasks_status_assigned')
        batch_op.drop_index('idx_tasks_updated_at')

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index('idx_users_email')
        batch_op.drop_index('idx_users_role')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index('idx_users_role', ['role'], unique=False)
        batch_op.create_index('idx_users_email', ['email'], unique=False)

    with op.batch_alter_table('tasks', schema=None) as batch_op:
        batch_op.create_index('idx_tasks_updated_at', ['updated_at'], unique=False)
        batch_op.create_index('idx_tasks_status_assigned', ['status', 'assigned_to'], unique=False)
        batch_op.create_index('idx_tasks_status', ['status'], unique=False)
        batch_op.create_index('idx_tasks_progress', ['progress'], unique=False)
        batch_op.create_index('idx_tasks_deadline_status', ['deadline', 'status'], unique=False)
        batch_op.create_index('idx_tasks_deadline', ['deadline'], unique=False)
        batch_op.create_index('idx_tasks_created_by', ['created_by'], unique=False)
        batch_op.create_index('idx_tasks_created_at', ['created_at'], unique=False)
        batch_op.create_index('idx_tasks_assigned_to', ['assigned_to'], unique=False)

    with op.batch_alter_table('task_github_links', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('task_github_links_task_id_fkey', 'tasks', ['task_id'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key('task_github_links_repo_id_fkey', 'github_repositories', ['repo_id'], ['id'], ondelete='CASCADE')
        batch_op.create_index('idx_task_github_links_task_id', ['task_id'], unique=False)
        batch_op.create_index('idx_task_github_links_repo_id', ['repo_id'], unique=False)

    with op.batch_alter_table('notifications', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('notifications_user_id_fkey', 'users', ['user_id'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key('notifications_task_id_fkey', 'tasks', ['task_id'], ['id'], ondelete='CASCADE')
        batch_op.create_index('idx_notifications_user_id', ['user_id'], unique=False)
        batch_op.create_index('idx_notifications_task_id', ['task_id'], unique=False)
        batch_op.create_index('idx_notifications_is_read', ['is_read'], unique=False)
        batch_op.create_index('idx_notifications_created_at', ['created_at'], unique=False)

    with op.batch_alter_table('github_tokens', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('github_tokens_user_id_fkey', 'users', ['user_id'], ['id'], ondelete='CASCADE')
        batch_op.create_index('idx_github_tokens_user_id', ['user_id'], unique=False)

    with op.batch_alter_table('github_repositories', schema=None) as batch_op:
        batch_op.create_index('idx_github_repositories_name', ['repo_name'], unique=False)
        batch_op.create_unique_constraint('github_repositories_repo_url_key', ['repo_url'])

    with op.batch_alter_table('comments', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('comments_user_id_fkey', 'users', ['user_id'], ['id'], ondelete='SET NULL')
        batch_op.create_foreign_key('comments_task_id_fkey', 'tasks', ['task_id'], ['id'], ondelete='CASCADE')
        batch_op.create_index('idx_comments_user_id', ['user_id'], unique=False)
        batch_op.create_index('idx_comments_task_id', ['task_id'], unique=False)
        batch_op.create_index('idx_comments_created_at', ['created_at'], unique=False)

    op.create_table('projects',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('projects_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], name='projects_created_by_fkey'),
    sa.PrimaryKeyConstraint('id', name='projects_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('project_tasks',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('project_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('task_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], name='project_tasks_project_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], name='project_tasks_task_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='project_tasks_pkey'),
    sa.UniqueConstraint('project_id', 'task_id', name='project_tasks_project_id_task_id_key')
    )
    # ### end Alembic commands ###
